import 'package:flutter/material.dart';import 'package:flutter/services.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:flutter_native_splash/flutter_native_splash.dart';import 'package:music_app/helper/AppColor.dart';import 'package:music_app/helper/AppFont.dart';import 'package:music_app/helper/AppRoute.dart';import 'ui/pages/home/HomePage.dart';import 'ui/pages/library/LibraryPage.dart';import 'ui/bottom_navigation_bar/BNBPage.dart';void main() {  WidgetsBinding widgetsBinding = WidgetsFlutterBinding.ensureInitialized();  FlutterNativeSplash.preserve(widgetsBinding: widgetsBinding);  SystemChrome.setEnabledSystemUIMode(SystemUiMode.edgeToEdge);  SystemChrome.setSystemUIOverlayStyle(    const SystemUiOverlayStyle(      statusBarColor: Colors.transparent,      statusBarIconBrightness: Brightness.dark,      systemNavigationBarColor: Colors.transparent,      systemNavigationBarContrastEnforced: false,      systemNavigationBarDividerColor: Colors.transparent,      systemNavigationBarIconBrightness: Brightness.dark,    ),  );  runApp(const MyApp());}class MyApp extends StatelessWidget {  const MyApp({super.key});  // This widget is the root of your application.  @override  Widget build(BuildContext context) {    return MaterialApp(      title: 'Flutter Demo',      debugShowCheckedModeBanner: false,      theme: ThemeData(        // This is the theme of your application.        //        // TRY THIS: Try running your application with "flutter run". You'll see        // the application has a blue toolbar. Then, without quitting the app,        // try changing the seedColor in the colorScheme below to Colors.green        // and then invoke "hot reload" (save your changes or press the "hot        // reload" button in a Flutter-supported IDE, or press "r" if you used        // the command line to start the app).        //        // Notice that the counter didn't reset back to zero; the application        // state is not lost during the reload. To reset the state, use hot        // restart instead.        //        // This works for code too, not just values: Most code changes can be        // tested with just a hot reload.        colorScheme: ColorScheme.fromSeed(          seedColor: AppColor.primary,          background: Colors.white,          secondary: Colors.white,        ),        useMaterial3: true,        fontFamily: AppFont.inter,        canvasColor: Colors.white,      ),      routes: _routes(),      home: const BNBPage(),    );  }  Map<String, WidgetBuilder> _routes() => <String, WidgetBuilder>{        AppRoute.home: (context) => const HomePage(),        AppRoute.library: (context) => const LibraryPage(),      };}